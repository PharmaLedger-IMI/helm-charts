apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "quorumnode.configmap.scripts" . }}
  namespace: {{ default .Release.Namespace }}
  labels:
    name: {{ include "quorumnode.configmap.scripts" . }}
data:
  ibft_propose.sh: |-
    #/bin/ash

    if [ $# -lt 1 ]; then
      echo " An address to vote in, or out, must be provided: "
      echo " ./propose_ibft.sh HEX_ADDRESS (true|false)"
    fi

    ADDRESS=$1
    VOTE_BOOL=true

    if [ $# -eq 2 ]; then
     VOTE_BOOL=$2
    fi
    RES=$(geth --exec "istanbul.propose(\"$1\", $VOTE_BOOL)" attach ipc:{{ .Values.quorum.dataDirPath }}/geth.ipc)
    echo $RES
  ibft_propose_all.sh: |-
    #!/bin/ash
    #set -xe

    for Addr in $( awk '/validators/,0' {{ .Values.quorum.homeMountPath }}/istanbul-validator-config.toml/istanbul-validator-config.toml | grep "0x" | sed 's/,//g; s/"//g' ); do
      echo $Addr
      {{ .Values.quorum.homeMountPath }}/node-management/ibft_propose.sh $Addr true
    done
  geth-attach.sh: |-
    #!/bin/sh

    # helper for connecting to geth from
    # outside the container
    # kubectl exec -it $POD -c quorum -- /geth-helpers/geth-attach.sh
    echo "connecting to geth {{ .Values.quorum.homeMountPath }}"
    geth attach --datadir {{ .Values.quorum.dataDirPath }} {{ .Values.quorum.dataDirPath }}/geth.ipc
  geth-exec.sh: |-
    #!/bin/sh

    # helper for connecting to geth from
    # outside the container
    # kubectl exec -it $POD -c quorum -- /geth-helpers/geth-exec.sh "admin.peers.length"

    GETH_CMD="eth.blockNumber"
    if [ "$#" -gt 0 ]; then
      GETH_CMD=$1
    fi
    # see: https://github.com/ethereum/go-ethereum/pull/17281
    # https://github.com/ethereum/go-ethereum/issues/16905
    # to avoid warning being returned
    # "WARN [02-20|00:21:04.382] Sanitizing cache to Go's GC limits  provided=1024 updated=663"
    geth --exec $GETH_CMD  --cache=16 attach --datadir {{ .Values.quorum.dataDirPath }} {{ .Values.quorum.dataDirPath }}/geth.ipc
