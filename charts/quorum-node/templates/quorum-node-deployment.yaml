{{- $enode := "" }}
{{- if .Values.use_case.newNetwork.enabled }}
  {{- $generatedPublicJson := ( .Values.use_case.newNetwork.plugin_data_common | fromJson ) }}
  {{- $enode = $generatedPublicJson.enode }}
{{- else }}
  {{- $generatedPublicJson := ( .Values.use_case.joinNetwork.plugin_data_common | fromJson ) }}
  {{- $enode = $generatedPublicJson.enode }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "quorumNode.fullname" . }}
  namespace: {{ default .Release.Namespace }}
  labels:
    {{- include "quorumNode.labels" . | nindent 4 }}

{{- /*
Deployment Spec:
*/}}
spec:
  replicas: {{ .Values.replicasCount }}
  selector:
    matchLabels:
      {{- include "quorumNode.selectorLabels" . | nindent 6 }}
  {{- with .Values.deploymentStrategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}

  {{- /*
  Pod Template:
  */}}
  template:
    metadata:
      name: {{ include "quorumNode.fullname" . }}
      labels:
        {{- include "quorumNode.selectorLabels" . | nindent 8 }}
      annotations:
      {{- if and .Values.quorum.metrics.enabled .Values.quorum.metrics.prometheusAnnotationsEnabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/debug/metrics/prometheus"
        prometheus.io/port: {{ .Values.quorum.metrics.port | quote }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: quorum-genesis-init-container
          {{- with .Values.securityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "quorumnode.image" . | quote }}
          command:
            - sh
            - -cx
          args:
            - |
              if [ ! -f {{ .Values.quorum.dataDirPath }}/genesis_created ]; then
                /usr/local/bin/geth --datadir {{ .Values.quorum.dataDirPath }} init {{ .Values.quorum.genesisFilePath }}
                date > {{ .Values.quorum.dataDirPath }}/genesis_created
              fi
          volumeMounts:
            - name: pvc-data
              mountPath: {{ .Values.quorum.homeDirPath }}
              subPath: {{ include "quorumNode.Identifier" . }}
            - name: cm-genesis
              mountPath: {{ .Values.quorum.genesisFilePath }}
              subPath: genesis-geth.json
      containers:
        - name: quorum
          {{- with .Values.securityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "quorumnode.image" . | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          readinessProbe:
            exec:
              command:
                - ls
                - {{ .Values.quorum.dataDirPath }}/geth.ipc
            initialDelaySeconds: 20
            periodSeconds: 3
          command:
            - sh
            - -cx
          args:
            - |
              # TODO: Not needed? JQ seems not to be used anywhere!
              # apk add jq

              ln -sf {{ .Values.quorum.homeDirPath }}/permission-nodes/permissioned-nodes.json {{ .Values.quorum.dataDirPath }}/permissioned-nodes.json
              ln -sf {{ .Values.quorum.homeDirPath }}/permission-nodes/permissioned-nodes.json {{ .Values.quorum.dataDirPath }}/static-nodes.json
              cat {{ .Values.quorum.genesisFilePath }}
              chmod 644 {{ .Values.quorum.dataDirPath }}/keystore/key
              touch {{ .Values.quorum.dataDirPath }}/password.txt

            {{- if not .Values.persistence.logs.enabled }}
              # If logging is disabled, we can start geth with exec to make it the primary process
              exec \
            {{- end }}
              /usr/local/bin/geth \
                --datadir {{ .Values.quorum.dataDirPath }} \
                --nodiscover \
                --permissioned \
                --nat=none \
                --verbosity {{ .Values.quorum.log.verbosity }} \
            {{- if .Values.quorum.log.emitcheckpoints }}
                --emitcheckpoints \
            {{- end }}
                --gcmode archive \
                --istanbul.blockperiod {{ .Values.quorum.miner.blockPeriod }} --mine --miner.threads {{ .Values.quorum.miner.threads }} \
                --syncmode full --nousb \
                --networkid {{ .Values.quorum.networkId }} \
            {{- if .Values.quorum.metrics.enabled }}
                --metrics --metrics.addr {{ .Values.quorum.metrics.addr | quote }} --metrics.port {{ .Values.quorum.metrics.port | quote }} \
            {{- end }}
                --port 30303 \
                --rpc --rpcaddr 0.0.0.0 --rpcport 8545 --rpcapi {{ .Values.quorum.rpc.api | quote }} \
                --rpccorsdomain {{ .Values.quorum.rpc.corsDomain | quote }} --rpcvhosts {{ .Values.quorum.rpc.vHosts | quote }} \
            {{- if not .Values.persistence.logs.enabled }}
                2>&1
            {{- else }}
                2>&1 | tee -a {{ .Values.quorum.homeDirPath }}/logs/quorum.log
            {{- end }}
          ports:
            - containerPort: 8545
            - containerPort: 30303
          {{- if .Values.quorum.metrics.enabled }}
            - containerPort: {{ .Values.quorum.metrics.port }}
          {{- end }}
          env:
            - name: PRIVATE_CONFIG
              value: "ignore"
            - name: THIS_NODE_ID
              value: {{ include "quorumNode.Identifier" . }}
            - name: THIS_ENODE
              value: {{ $enode }}
          volumeMounts:
            - name: pvc-data
              mountPath: {{ .Values.quorum.homeDirPath }}
              subPath: {{ include "quorumNode.Identifier" . }}
          {{- if .Values.persistence.logs.enabled }}
            - name: pvc-logs
              mountPath: {{ .Values.quorum.homeDirPath }}/logs
              subPath: {{ include "quorumNode.Identifier" . }}-logs
          {{- end }}
            - name: cm-genesis
              mountPath: {{ .Values.quorum.genesisFilePath }}
              subPath: genesis-geth.json
            - name: cm-nodekey
              mountPath: {{ .Values.quorum.dataDirPath }}/geth/nodekey
              subPath: nodekey
          {{- if .Values.use_case.newNetwork.enabled }}
            - name: cm-account-key
              mountPath: {{ .Values.quorum.dataDirPath }}/keystore/key
              subPath: key
          {{- end }}
            - name: cm-enode
              mountPath: {{ .Values.quorum.dataDirPath }}/geth/enode
              subPath: enode
            - name: cm-permissioned-nodes
              mountPath: {{ .Values.quorum.homeDirPath }}/permission-nodes
            - name: cm-geth-helpers
              mountPath: /geth-helpers
            - name: cm-validator-config
              mountPath: {{ .Values.quorum.homeDirPath }}/istanbul-validator-config.toml
            - name: cm-node-management
              mountPath: {{ .Values.quorum.homeDirPath }}/node-management/ibft_propose.sh
              subPath: ibft_propose.sh
            - name: cm-node-management
              mountPath: {{ .Values.quorum.homeDirPath }}/node-management/ibft_propose_all.sh
              subPath: ibft_propose_all.sh
      volumes:
      {{- if .Values.use_case.newNetwork.enabled }}
        - name: cm-account-key
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-account-key
            items:
              - key: key
                path: key
      {{- end }}
        - name: cm-permissioned-nodes
          configMap:
            name: {{ include "quorumnode.PermissionedCfg" . }}
            items:
              - key: permissioned-nodes.json
                path: permissioned-nodes.json
        - name: cm-genesis
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-genesis
            items:
              - key: genesis-geth.json
                path: genesis-geth.json
        - name: cm-nodekey
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-nodekey
            items:
              - key: nodekey
                path: nodekey
        - name: cm-enode
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-enode
            items:
              - key: enode
                path: enode
        - name: cm-geth-helpers
          configMap:
            name: {{ include "quorumnode.gethHelpers" . }}
            items:
              - key: geth-attach.sh
                path: geth-attach.sh
              - key: geth-exec.sh
                path: geth-exec.sh
            defaultMode: 0777
        - name: cm-validator-config
          configMap:
            name: {{ include "quorumnode.IValidatorCfg" . }}
        - name: cm-node-management
          configMap:
            name: {{ include "quorumnode.NodeManagement" . }}
            items:
              - key: ibft_propose.sh
                path: ibft_propose.sh
              - key: ibft_propose_all.sh
                path: ibft_propose_all.sh
            defaultMode: 0777
        # PVC (configurable) https://kubernetes.io/docs/concepts/storage/persistent-volumes/#claims-as-volumes
        - name: pvc-data
          persistentVolumeClaim:
            claimName: {{ include "quorumnode.PvcData" . }}
      {{- if .Values.persistence.logs.enabled }}
        - name: pvc-logs
          persistentVolumeClaim:
            claimName: {{ include "quorumnode.PvcLogs" . }}
      {{- end }}
