{{- if .Values.git_upload.enabled  }}
{{- $nodeKeyPublic := ""}}
{{- $enode := "" }}

{{- if .Values.use_case.newNetwork.enabled }}
  {{- $generatedPublicJson := ( .Values.use_case.newNetwork.plugin_data_common | fromJson ) }}
  {{- $nodeKeyPublic = $generatedPublicJson.nodeKeyPublic }}
  {{- $enode = $generatedPublicJson.enode }}
{{- else }}
  {{- $generatedPublicJson := ( .Values.use_case.joinNetwork.plugin_data_common | fromJson ) }}
  {{- $nodeKeyPublic = $generatedPublicJson.nodeKeyPublic }}
  {{- $enode = $generatedPublicJson.enode }}
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  name: quorum-git-post-install
  namespace: {{ default .Release.Namespace }}
  labels:
    app: quorum-git-post-install
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  template:
    spec:
      containers:
        - name: quorum-git-post-install
          imagePullPolicy: IfNotPresent
          image: alpine/git:v2.32.0
          command:
            - sh
            - -cx
          args:
            - |
              git config --global user.email {{ .Values.git_upload.email | quote }}
              git config --global user.name {{ .Values.git_upload.user | quote }}
            {{- $storagepath :=  printf "%s/%s/%s" .Values.shared_repository_conventions.base_shareable_storage_path .Values.deployment.network_name .Values.deployment.company }}
            {{- $genesisstoragepath :=  printf "%s/%s" .Values.shared_repository_conventions.base_shareable_storage_path .Values.deployment.network_name }}

            {{- /*
            # pragma: allowlist nextline secret
            */}}{{- $gitRepo := printf "https://%s:x-oauth-basic@github.com/%s" .Values.git_shared_configuration.read_write_token .Values.git_shared_configuration.repository_name }}
            {{- $validatorFilename := printf "%s/%s" $storagepath .Values.shared_repository_conventions.validator_file_name }}
            {{- $enodeFilename := printf "%s/%s" $storagepath  .Values.shared_repository_conventions.enode_file_name }}
            {{- $enodeaddressFilename := printf "%s/%s" $storagepath .Values.shared_repository_conventions.enode_address_file_name }}
            {{- $enodeportFilename := printf "%s/%s" $storagepath .Values.shared_repository_conventions.enode_address_port_file_name }}
            {{- $natFilename := printf "%s/%s" $storagepath .Values.shared_repository_conventions.nat_file_name }}

              git clone {{ $gitRepo }} {{ .Values.git_upload.git_repo_clone_directory }}
              cd {{ .Values.git_upload.git_repo_clone_directory }}/
              mkdir -p {{ $storagepath }}

              rm -f {{ $validatorFilename }}
              rm -f {{ $enodeFilename }}
              rm -f {{ $enodeaddressFilename }}
              rm -f {{ $enodeportFilename }}
              rm -f {{ $natFilename }}

            {{- if .Values.use_case.newNetwork.enabled }}
              {{- $genesisFilename := printf "%s/%s" $genesisstoragepath .Values.shared_repository_conventions.genesis_file_name }}
              rm -f {{ $genesisFilename }}
              cat {{ .Values.quorum.genesisFilePath }} > {{ $genesisFilename }}
              git add {{ $genesisFilename }}
            {{- end }}
            
              echo {{ $nodeKeyPublic | quote }} > {{ $validatorFilename }}
              git add {{ $validatorFilename }}

              echo {{ $enode | quote }} > {{ $enodeFilename }}
              git add {{ $enodeFilename }}

              echo {{ .Values.deployment.enode_address | quote }} > {{ $enodeaddressFilename }}
              git add {{ $enodeaddressFilename }}

              echo {{ .Values.deployment.enode_address_port | quote }} > {{ $enodeportFilename }}
              git add {{ $enodeportFilename }}

              echo {{ .Values.deployment.NAT | quote }} > {{ $natFilename }}
              git add {{ $natFilename }}

              git commit -m {{ .Values.git_upload.git_commit_description | quote }}
              git push origin master
          volumeMounts:
          {{- if .Values.use_case.newNetwork.enabled }}
            - name: cm-genesis
              mountPath: {{ .Values.quorum.genesisFilePath }}
              subPath: genesis-geth.json
          {{- end }}
            - name: quorum-nodekey
              mountPath: {{ .Values.quorum.dataDirPath }}/geth/nodekey
              subPath: nodekey
            - name: quorum-enode
              mountPath: {{ .Values.quorum.dataDirPath }}/geth/enode
              subPath: enode
      restartPolicy: Never
      volumes:
      {{- if .Values.use_case.newNetwork.enabled }}
        - name: cm-genesis
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-genesis
            items:
              - key: genesis-geth.json
                path: genesis-geth.json
      {{- end }}
        - name: quorum-nodekey
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-nodekey-config
            items:
              - key: nodekey
                path: nodekey
        - name: quorum-enode
          configMap:
            name: {{ include "quorumNode.Identifier" . }}-enode-config
            items:
              - key: enode
                path: enode

{{- end }}
