NAME:
   geth - the go-ethereum command line interface

   Copyright 2013-2021 The go-ethereum Authors

USAGE:
   geth [options] [command] [command options] [arguments...]

VERSION:
   1.10.2-stable-e5b930e8(quorum-v22.7.0)

COMMANDS:
   account                            Manage accounts
   attach                             Start an interactive JavaScript environment (connect to node)
   console                            Start an interactive JavaScript environment
   db                                 Low level database operations
   dump                               Dump a specific block from storage
   dumpconfig                         Show configuration values
   dumpgenesis                        Dumps genesis block JSON configuration to stdout
   export                             Export blockchain into file
   export-preimages                   Export the preimage database into an RLP stream
   import                             Import a blockchain file
   import-preimages                   Import the preimage database from an RLP stream
   init                               Bootstrap and initialize a new genesis block
   js                                 Execute the specified JavaScript files
   license                            Display license information
   makecache                          Generate ethash verification cache (for testing)
   makedag                            Generate ethash mining DAG (for testing)
   mpsdbupgrade                       Upgrade a standalone DB to an MPS DB
   removedb                           Remove blockchain and state databases
   show-deprecated-flags              Show flags that have been deprecated
   snapshot                           A set of commands based on the snapshot
   version                            Print version numbers
   version-check                      Checks (online) whether the current version suffers from any known security vulnerabilities
   wallet                             Manage Ethereum presale wallets
   help, h                            Shows a list of commands or help for one command

ETHEREUM OPTIONS:
  --config value                      TOML configuration file
  --datadir value                     Data directory for the databases and keystore (default: "/root/.ethereum")
  --datadir.ancient value             Data directory for ancient chain segments (default = inside chaindata)
  --datadir.minfreedisk value         Minimum free disk space in MB, once reached triggers auto shut down (default = --cache.gc converted to MB, 0 = disabled)
  --keystore value                    Directory for the keystore (default = inside the datadir)
  --usb                               Enable monitoring and management of USB hardware wallets
  --pcscdpath value                   Path to the smartcard daemon (pcscd) socket file (default: "/run/pcscd/pcscd.comm")
  --networkid value                   Explicitly set network id (integer)(For testnets: use --ropsten, --rinkeby, --goerli instead) (default: 1337)
  --mainnet                           Ethereum mainnet
  --goerli                            GÃ¶rli network: pre-configured proof-of-authority test network
  --rinkeby                           Rinkeby network: pre-configured proof-of-authority test network
  --yolov3                            YOLOv3 network: pre-configured proof-of-authority shortlived test network.
  --ropsten                           Ropsten network: pre-configured proof-of-work test network
  --syncmode value                    Blockchain sync mode ("fast", "full", "snap" or "light") (default: full)
  --exitwhensynced                    Exits after block synchronisation completes
  --gcmode value                      Blockchain garbage collection mode ("full", "archive") (default: "full")
  --txlookuplimit value               Number of recent blocks to maintain transactions index for (default = about one year, 0 = entire chain) (default: 2350000)
  --ethstats value                    Reporting URL of a ethstats service (nodename:secret@host:port)
  --identity value                    Custom node name
  --lightkdf                          Reduce key-derivation RAM & CPU usage at some expense of KDF strength
  --authorizationlist value           Comma separated block number-to-hash mappings to authorize (<number>=<hash>)

LIGHT CLIENT OPTIONS:
  --light.serve value                 Maximum percentage of time allowed for serving LES requests (multi-threaded processing allows values over 100) (default: 0)
  --light.ingress value               Incoming bandwidth limit for serving light clients (kilobytes/sec, 0 = unlimited) (default: 0)
  --light.egress value                Outgoing bandwidth limit for serving light clients (kilobytes/sec, 0 = unlimited) (default: 0)
  --light.maxpeers value              Maximum number of light clients to serve, or light servers to attach to (default: 100)
  --ulc.servers value                 List of trusted ultra-light servers
  --ulc.fraction value                Minimum % of trusted ultra-light servers required to announce a new head (default: 75)
  --ulc.onlyannounce                  Ultra light server sends announcements only
  --light.nopruning                   Disable ancient light chain data pruning
  --light.nosyncserve                 Enables serving light clients before syncing

DEVELOPER CHAIN OPTIONS:
  --dev                               Ephemeral proof-of-authority network with a pre-funded developer account, mining enabled
  --dev.period value                  Block period to use in developer mode (0 = mine only if transaction pending) (default: 0)

ETHASH OPTIONS:
  --ethash.cachedir value             Directory to store the ethash verification caches (default = inside the datadir)
  --ethash.cachesinmem value          Number of recent ethash caches to keep in memory (16MB each) (default: 2)
  --ethash.cachesondisk value         Number of recent ethash caches to keep on disk (16MB each) (default: 3)
  --ethash.cacheslockmmap             Lock memory maps of recent ethash caches
  --ethash.dagdir value               Directory to store the ethash mining DAGs (default: "/root/.ethash")
  --ethash.dagsinmem value            Number of recent ethash mining DAGs to keep in memory (1+GB each) (default: 1)
  --ethash.dagsondisk value           Number of recent ethash mining DAGs to keep on disk (1+GB each) (default: 2)
  --ethash.dagslockmmap               Lock memory maps for recent ethash mining DAGs

TRANSACTION POOL OPTIONS:
  --txpool.locals value               Comma separated accounts to treat as locals (no flush, priority inclusion)
  --txpool.nolocals                   Disables price exemptions for locally submitted transactions
  --txpool.journal value              Disk journal for local transaction to survive node restarts (default: "transactions.rlp")
  --txpool.rejournal value            Time interval to regenerate the local transaction journal (default: 1h0m0s)
  --txpool.pricelimit value           Minimum gas price limit to enforce for acceptance into the pool (default: 1)
  --txpool.pricebump value            Price bump percentage to replace an already existing transaction (default: 10)
  --txpool.accountslots value         Minimum number of executable transaction slots guaranteed per account (default: 16)
  --txpool.globalslots value          Maximum number of executable transaction slots for all accounts (default: 4096)
  --txpool.accountqueue value         Maximum number of non-executable transaction slots permitted per account (default: 64)
  --txpool.globalqueue value          Maximum number of non-executable transaction slots for all accounts (default: 1024)
  --txpool.lifetime value             Maximum amount of time non-executable transaction are queued (default: 3h0m0s)

PERFORMANCE TUNING OPTIONS:
  --cache value                       Megabytes of memory allocated to internal caching (default = 4096 mainnet full node, 128 light mode) (default: 1024)
  --cache.database value              Percentage of cache memory allowance to use for database io (default: 50)
  --cache.trie value                  Percentage of cache memory allowance to use for trie caching (default = 15% full mode, 30% archive mode) (default: 15)
  --cache.trie.journal value          Disk journal directory for trie cache to survive node restarts (default: "triecache")
  --cache.trie.rejournal value        Time interval to regenerate the trie cache journal (default: 1h0m0s)
  --cache.gc value                    Percentage of cache memory allowance to use for trie pruning (default = 25% full mode, 0% archive mode) (default: 25)
  --cache.snapshot value              Percentage of cache memory allowance to use for snapshot caching (default = 10% full mode, 20% archive mode) (default: 10)
  --cache.noprefetch                  Disable heuristic state prefetch during block import (less CPU and disk IO, more time waiting for data)
  --cache.preimages                   Enable recording the SHA3/keccak preimages of trie keys

ACCOUNT OPTIONS:
  --unlock value                      Comma separated list of accounts to unlock
  --password value                    Password file to use for non-interactive password input
  --signer value                      External signer (url or path to ipc file)
  --allow-insecure-unlock             Allow insecure account unlocking when account-related RPCs are exposed by http

API AND CONSOLE OPTIONS:
  --ipcdisable                        Disable the IPC-RPC server
  --ipcpath value                     Filename for IPC socket/pipe within the datadir (explicit paths escape it)
  --http                              Enable the HTTP-RPC server
  --http.addr value                   HTTP-RPC server listening interface (default: "localhost")
  --http.port value                   HTTP-RPC server listening port (default: 8545)
  --http.api value                    API's offered over the HTTP-RPC interface
  --http.rpcprefix value              HTTP path path prefix on which JSON-RPC is served. Use '/' to serve on all paths.
  --http.corsdomain value             Comma separated list of domains from which to accept cross origin requests (browser enforced)
  --http.vhosts value                 Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: "localhost")
  --ws                                Enable the WS-RPC server
  --ws.addr value                     WS-RPC server listening interface (default: "localhost")
  --ws.port value                     WS-RPC server listening port (default: 8546)
  --ws.api value                      API's offered over the WS-RPC interface
  --ws.rpcprefix value                HTTP path prefix on which JSON-RPC is served. Use '/' to serve on all paths.
  --ws.origins value                  Origins from which to accept websockets requests
  --graphql                           Enable GraphQL on the HTTP-RPC server. Note that GraphQL can only be started if an HTTP server is started as well.
  --graphql.corsdomain value          Comma separated list of domains from which to accept cross origin requests (browser enforced)
  --graphql.vhosts value              Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (default: "localhost")
  --rpc.gascap value                  Sets a cap on gas that can be used in eth_call/estimateGas (0=infinite) (default: 25000000)
  --rpc.txfeecap value                Sets a cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap) (default: 1)
  --rpc.allow-unprotected-txs         Allow for unprotected (non EIP155 signed) transactions to be submitted via RPC
  --jspath loadScript                 JavaScript root path for loadScript (default: ".")
  --exec value                        Execute JavaScript statement
  --preload value                     Comma separated list of JavaScript files to preload into the console
  --rpcclitoken value                 RPC Client access token
  --rpcclitls.insecureskipverify      Disable verification of server's TLS certificate on connection by client
  --rpcclitls.cert value              Server's TLS certificate PEM file on connection by client
  --rpcclitls.cacert value            CA certificate PEM file for provided server's TLS certificate on connection by client
  --rpcclitls.ciphersuites value      Customize supported cipher suites when using TLS connection. Value is a comma-separated cipher suite string

NETWORKING OPTIONS:
  --bootnodes value                   Comma separated enode URLs for P2P discovery bootstrap
  --discovery.dns value               Sets DNS discovery entry points (use "" to disable DNS)
  --port value                        Network listening port (default: 30303)
  --maxpeers value                    Maximum number of network peers (network disabled if set to 0) (default: 50)
  --maxpendpeers value                Maximum number of pending connection attempts (defaults used if set to 0) (default: 0)
  --nat value                         NAT port mapping mechanism (any|none|upnp|pmp|extip:<IP>) (default: "any")
  --nodiscover                        Disables the peer discovery mechanism (manual peer addition)
  --v5disc                            Enables the experimental RLPx V5 (Topic Discovery) mechanism
  --netrestrict value                 Restricts network communication to the given IP networks (CIDR masks)
  --nodekey value                     P2P node key file
  --nodekeyhex value                  P2P node key as hex (for testing)

MINER OPTIONS:
  --mine                              Enable mining
  --miner.threads value               Number of CPU threads to use for mining (default: 0)
  --miner.notify value                Comma separated HTTP URL list to notify of new work packages
  --miner.notify.full                 Notify with pending block headers instead of work packages
  --miner.gasprice value              Minimum gas price for mining a transaction (default: 1000000000)
  --miner.gastarget value             Target gas floor for mined blocks (default: 700000000)
  --miner.gaslimit value              Target gas ceiling for mined blocks (default: 800000000)
  --miner.etherbase value             Public address for block mining rewards (default = first account) (default: "0")
  --miner.extradata value             Block extra data set by the miner (default = client version)
  --miner.recommit value              Time interval to recreate the block being mined (default: 3s)
  --miner.noverify                    Disable remote sealing verification

GAS PRICE ORACLE OPTIONS:
  --gpo.blocks value                  Number of recent blocks to check for gas prices (default: 20)
  --gpo.percentile value              Suggested gas price is the given percentile of a set of recent transaction gas prices (default: 60)
  --gpo.maxprice value                Maximum gas price will be recommended by gpo (default: 500000000000)

VIRTUAL MACHINE OPTIONS:
  --vmdebug                           Record information useful for VM and contract debugging
  --vm.evm value                      External EVM configuration (default = built-in interpreter)
  --vm.ewasm value                    External ewasm configuration (default = built-in interpreter)
  --vm.calltimeout value              Timeout duration in seconds for message call execution without creating a transaction. Value 0 means no timeout. (default: 5)

LOGGING AND DEBUGGING OPTIONS:
  --fakepow                           Disables proof-of-work verification
  --nocompaction                      Disables db compaction after import
  --verbosity value                   Logging verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (default: 3)
  --vmodule value                     Per-module verbosity: comma-separated list of <pattern>=<level> (e.g. eth/*=5,p2p=4)
  --log.json                          Format logs with JSON
  --log.backtrace value               Request a stack trace at a specific logging statement (e.g. "block.go:271")
  --log.debug                         Prepends log messages with call-site location (file and line number)
  --pprof                             Enable the pprof HTTP server
  --pprof.addr value                  pprof HTTP server listening interface (default: "127.0.0.1")
  --pprof.port value                  pprof HTTP server listening port (default: 6060)
  --pprof.memprofilerate value        Turn on memory profiling with the given rate (default: 524288)
  --pprof.blockprofilerate value      Turn on block profiling with the given rate (default: 0)
  --pprof.cpuprofile value            Write CPU profile to the given file
  --trace value                       Write execution trace to the given file

METRICS AND STATS OPTIONS:
  --metrics                           Enable metrics collection and reporting
  --metrics.expensive                 Enable expensive metrics collection and reporting
  --metrics.addr value                Enable stand-alone metrics HTTP server listening interface (default: "127.0.0.1")
  --metrics.port value                Metrics HTTP server listening port (default: 6060)
  --metrics.influxdb                  Enable metrics export/push to an external InfluxDB database
  --metrics.influxdb.endpoint value   InfluxDB API endpoint to report metrics to (default: "http://localhost:8086")
  --metrics.influxdb.database value   InfluxDB database name to push reported metrics to (default: "geth")
  --metrics.influxdb.username value   Username to authorize access to the database (default: "test")
  --metrics.influxdb.password value   Password to authorize access to the database (default: "test")
  --metrics.influxdb.tags value       Comma-separated InfluxDB tags (key/values) attached to all measurements (default: "host=localhost")

ALIASED (deprecated) OPTIONS:
  --nousb                             Disables monitoring for and managing USB hardware wallets (deprecated)
  --rpc                               Enable the HTTP-RPC server (deprecated and will be removed in the future, use --http)
  --rpcaddr value                     HTTP-RPC server listening interface (deprecated and will be removed in the future, use --http.addr) (default: "localhost")
  --rpcport value                     HTTP-RPC server listening port (deprecated and will be removed in the future, use --http.port) (default: 8545)
  --rpccorsdomain value               Comma separated list of domains from which to accept cross origin requests (browser enforced) (deprecated and will be removed in the future, use --http.corsdomain)
  --rpcvhosts value                   Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard. (deprecated and will be removed in the future, use --http.vhosts) (default: "localhost")
  --rpcapi value                      API's offered over the HTTP-RPC interface (deprecated and will be removed in the future, use --http.api)

QUORUM OPTIONS:
  --immutabilitythreshold value       overrides the default immutability threshold for Quorum nodes. Its the threshold beyond which block data will be moved to ancient db (default: 3162240)
  --permissioned                      If enabled, the node will allow only a defined list of nodes to connect
  --plugins value                     The URI of configuration which describes plugins being used. E.g.: file:///opt/geth/plugins.json
  --plugins.skipverify                If enabled, plugin integrity is NOT verified
  --plugins.localverify               If enabled, verify plugin integrity from local file system. This requires plugin signature file and PGP public key file to be available
  --plugins.publickey value           The URI of PGP public key for local plugin verification. E.g.: file:///opt/geth/pubkey.pgp.asc. This flag is only valid if --plugins.localverify is set (default = file:///<pluginBaseDir>/gpg.key)
  --allowedfutureblocktime value      Max time (in seconds) from current time allowed for blocks, before they're considered future blocks (default: 0)
  --multitenancy                      Enable multitenancy support for this node. This requires RPC Security Plugin to also be configured.
  --revertreason                      Enable saving revert reason in the transaction receipts for this node.
  --privatetriecache.enable           Enable use of private trie cache for this node.
  --privacymarker.enable              Enable use of privacy marker transactions (PMT) for this node.

QUORUM LIGHT CLIENT/SERVER OPTIONS:
  --qlight.server                                 If enabled, the quorum light P2P protocol is started in addition to the other P2P protocols
  --qlight.server.p2p.port value                  QLight Network listening port (default: 30305)
  --qlight.server.p2p.maxpeers value              Maximum number of qlight peers (default: 10)
  --qlight.server.p2p.netrestrict value           Restricts network communication to the given IP networks (CIDR masks)
  --qlight.server.p2p.permissioning               If enabled, the qlight peers are checked against a permissioned list and a disallowed list.
  --qlight.server.p2p.permissioning.prefix value  The prefix for the permissioned-nodes.json and disallowed-nodes.json files.
  --qlight.client                                 If enabled, the quorum light client P2P protocol is started (only)
  --qlight.client.psi value                       The PSI this client will use to connect to a server node.
  --qlight.client.token.enabled                   Whether the client uses a token when connecting to the qlight server.
  --qlight.client.token.value value               The token this client will use to connect to a server node.
  --qlight.client.token.management value          The mechanism used to refresh the token. Possible values: none (developer mode)/external (new token must be injected via the qlight RPC API)/client-security-plugin (the client security plugin must be deployed/configured).
  --qlight.client.rpc.tls                         If enabled, the quorum light client RPC connection will be configured to use TLS
  --qlight.client.rpc.tls.insecureskipverify      If enabled, the quorum light client RPC connection skips TLS verification
  --qlight.client.rpc.tls.cacert value            The quorum light client RPC client certificate authority.
  --qlight.client.rpc.tls.cert value              The quorum light client RPC client certificate.
  --qlight.client.rpc.tls.key value               The quorum light client RPC client certificate private key.
  --qlight.client.serverNode value                The node ID of the target server node
  --qlight.client.serverNodeRPC value             The RPC URL of the target server node
  --qlight.tls                                    If enabled, the quorum light client P2P protocol will use tls
  --qlight.tls.cert value                         The certificate file to use for the qlight P2P connection
  --qlight.tls.key value                          The key file to use for the qlight P2P connection
  --qlight.tls.cacerts value                      The certificate authorities file to use for validating P2P connection
  --qlight.tls.clientauth value                   The way the client is authenticated. Possible values: 0=NoClientCert(default) 1=RequestClientCert 2=RequireAnyClientCert 3=VerifyClientCertIfGiven 4=RequireAndVerifyClientCert (default: 0)
  --qlight.tls.ciphersuites value                 The cipher suites to use for the qlight P2P connection

QUORUM PRIVATE TRANSACTION MANAGER OPTIONS:
  --ptm.socket value                  Path to the ipc file when using unix domain socket for the private transaction manager connection
  --ptm.url value                     URL when using http connection to private transaction manager
  --ptm.timeout value                 Timeout (seconds) for the private transaction manager connection. Zero value means timeout disabled. (default: 5)
  --ptm.dialtimeout value             Dial timeout (seconds) for the private transaction manager connection. Zero value means timeout disabled. (default: 1)
  --ptm.http.idletimeout value        Idle timeout (seconds) for the private transaction manager connection. Zero value means timeout disabled. (default: 10)
  --ptm.http.writebuffersize value    Size of the write buffer (bytes) for the private transaction manager connection. Zero value uses http.Transport default. (default: 0)
  --ptm.http.readbuffersize value     Size of the read buffer (bytes) for the private transaction manager connection. Zero value uses http.Transport default. (default: 0)
  --ptm.tls.mode value                If "off" then TLS disabled (default). If "strict" then will use TLS for http connection to private transaction manager
  --ptm.tls.rootca value              Path to file containing root CA certificate for TLS connection to private transaction manager (defaults to host's certificates)
  --ptm.tls.clientcert value          Path to file containing client certificate (or chain of certs) for TLS connection to private transaction manager
  --ptm.tls.clientkey value           Path to file containing client's private key for TLS connection to private transaction manager
  --ptm.tls.insecureskipverify        Disable verification of server's TLS certificate on connection to private transaction manager

RAFT OPTIONS:
  --raft                              If enabled, uses Raft instead of Quorum Chain for consensus
  --raftblocktime value               Amount of time between raft block creations in milliseconds (default: 50)
  --raftjoinexisting value            The raft ID to assume when joining an pre-existing cluster (default: 0)
  --raftport value                    The port to bind for the raft transport (default: 50400)
  --raftdnsenable                     Enable DNS resolution of peers

ISTANBUL OPTIONS:
  --istanbul.requesttimeout value     [Deprecated] Timeout for each Istanbul round in milliseconds (default: 10000)
  --istanbul.blockperiod value        [Deprecated] Default minimum difference between two consecutive block's timestamps in seconds (default: 1)

MISC OPTIONS:
  --snapshot                          Enables snapshot-database mode (default = enable)
  --bloomfilter.size value            Megabytes of memory allocated to bloom-filter for pruning (default: 2048)
  --help, -h                          show help
  --override.berlin value             Manually specify Berlin fork-block, overriding the bundled setting (default: 0)
  --raftlogdir value                  Raft log directory for the raft-state, raft-snap and raft-wal folders (default: "/root/.ethereum")
  --emitcheckpoints                   If enabled, emit specially formatted logging checkpoints


COPYRIGHT:
   Copyright 2013-2021 The go-ethereum Authors
