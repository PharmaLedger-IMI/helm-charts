{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "description": "Analyzes AWS VPC Flow Logs to gain insights into the traffic from/to Quorum Node",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 12,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 10,
        "panels": [],
        "title": "OUTGOING traffic (egress)",
        "type": "row"
      },
      {
        "datasource": {
          "type": "cloudwatch",
          "uid": "MBCPEn87z"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-RdYlGr"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sum(bytes)"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "gradient-gauge"
                },
                {
                  "id": "unit",
                  "value": "bytes"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "address"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "color-background-solid"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "green",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 1
        },
        "id": 14,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "8.4.2",
        "targets": [
          {
            "datasource": {
              "type": "cloudwatch",
              "uid": "MBCPEn87z"
            },
            "expression": "filter action=\"ACCEPT\"\n| filter dstPort=30303\n| filter not isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your VPC, e.g. 10.0.0.0/16\") # filter by external addresses; we do not want to count healthchecks from NLB to node\n  # Filter source by public subnets where NAT-GW sits (as node->NAT is counted as own connection, we filter these)\n| filter (isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your first public subnet, e.g. 10.0.0.0/22\") or isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your second public subnet, e.g. 10.0.4.0/22\") or isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your third public subnet, e.g. 10.0.8.0/22\"))\n| stats count(*) as count, sum(bytes) by dstAddr as address\n| sort count desc\n| limit 40",
            "id": "",
            "logGroupNames": [
              "TODO: replace with you CloudWatch Log Group name"
            ],
            "namespace": "",
            "queryMode": "Logs",
            "refId": "A",
            "region": "default",
            "statsGroups": [
              "external",
              "addresses"
            ]
          }
        ],
        "title": "Outgoing accepted traffic from NAT-GW to internet at port 30303",
        "type": "table"
      },
      {
        "datasource": {
          "type": "cloudwatch",
          "uid": "MBCPEn87z"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-RdYlGr"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": false
            },
            "mappings": [],
            "noValue": "OK - No rejects",
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sum(bytes)"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "gradient-gauge"
                },
                {
                  "id": "unit",
                  "value": "bytes"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "address"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "color-background-solid"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 1
        },
        "id": 17,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "8.4.2",
        "targets": [
          {
            "datasource": {
              "type": "cloudwatch",
              "uid": "MBCPEn87z"
            },
            "expression": "filter action=\"REJECT\"\n| filter dstPort=30303\n| filter not isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your VPC, e.g. 10.0.0.0/16\") # filter by external addresses; we do not want to count healthchecks from NLB to node\n  # Filter source by public subnets where NAT-GW sits (as node->NAT is counted as own connection, we filter these)\n| filter (isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your first public subnet, e.g. 10.0.0.0/22\") or isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your second public subnet, e.g. 10.0.4.0/22\") or isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your third public subnet, e.g. 10.0.8.0/22\"))\n| stats count(*) as count, sum(bytes) by dstAddr as address\n| sort count desc\n| limit 40",
            "id": "",
            "logGroupNames": [
              "TODO: replace with you CloudWatch Log Group name"
            ],
            "namespace": "",
            "queryMode": "Logs",
            "refId": "A",
            "region": "default",
            "statsGroups": [
              "external",
              "addresses"
            ]
          }
        ],
        "title": "Outgoing REJECTED traffic from NAT-GW to internet at port 30303",
        "type": "table"
      },
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 9
        },
        "id": 8,
        "panels": [],
        "title": "INCOMING traffic (ingress)",
        "type": "row"
      },
      {
        "datasource": {
          "type": "cloudwatch",
          "uid": "MBCPEn87z"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-RdYlGr"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sum(bytes)"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "gradient-gauge"
                },
                {
                  "id": "unit",
                  "value": "bytes"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "address"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "color-background-solid"
                },
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "green",
                    "mode": "fixed"
                  }
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 10
        },
        "id": 15,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "8.4.2",
        "targets": [
          {
            "datasource": {
              "type": "cloudwatch",
              "uid": "MBCPEn87z"
            },
            "expression": "filter action=\"ACCEPT\"\n| filter dstPort=30303 # Filter by Quorum Port\n| filter not isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your VPC, e.g. 10.0.0.0/16\") # filter by external addresses\n  # filter destination by private subnets (as external IP->NLB is counted as own connection, we want filter these):\n| filter (isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your first private subnet, e.g. 10.0.16.0/20\") or isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your second private subnet, e.g. 10.0.32.0/20\") or isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your third private subnet, e.g. 10.0.48.0/20\"))\n| stats count(*) as count, sum(bytes) by srcAddr as address\n| sort count desc\n| limit 40",
            "id": "",
            "logGroupNames": [
              "TODO: replace with you CloudWatch Log Group name"
            ],
            "namespace": "",
            "queryMode": "Logs",
            "refId": "A",
            "region": "default",
            "statsGroups": [
              "Quorum",
              "Port"
            ]
          }
        ],
        "title": "Incoming accepted traffic from internet to our node at port 30303",
        "type": "table"
      },
      {
        "datasource": {
          "type": "cloudwatch",
          "uid": "MBCPEn87z"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-RdYlGr"
            },
            "custom": {
              "align": "auto",
              "displayMode": "auto",
              "filterable": false
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sum(bytes)"
              },
              "properties": [
                {
                  "id": "custom.displayMode",
                  "value": "gradient-gauge"
                },
                {
                  "id": "unit",
                  "value": "bytes"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "address"
              },
              "properties": [
                {
                  "id": "color",
                  "value": {
                    "fixedColor": "red",
                    "mode": "fixed"
                  }
                },
                {
                  "id": "custom.displayMode",
                  "value": "color-background-solid"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 10
        },
        "id": 16,
        "options": {
          "footer": {
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true
        },
        "pluginVersion": "8.4.2",
        "targets": [
          {
            "datasource": {
              "type": "cloudwatch",
              "uid": "MBCPEn87z"
            },
            "expression": "filter action=\"REJECT\"\n| filter dstPort=30303 # Filter by Quorum Port\n| filter not isIpv4InSubnet(srcAddr, \"TODO: Replace with the CIDR range of your VPC, e.g. 10.0.0.0/16\") # filter by external addresses\n  # filter destination by private subnets (as external IP->NLB is counted as own connection, we want filter these):\n| filter (isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your first private subnet, e.g. 10.0.16.0/20\") or isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your second private subnet, e.g. 10.0.32.0/20\") or isIpv4InSubnet(dstAddr, \"TODO: Replace with the CIDR range of your third private subnet, e.g. 10.0.48.0/20\"))\n| stats count(*) as count, sum(bytes) by srcAddr as address\n| sort count desc\n| limit 40",
            "id": "",
            "logGroupNames": [
              "TODO: replace with you CloudWatch Log Group name"
            ],
            "namespace": "",
            "queryMode": "Logs",
            "refId": "A",
            "region": "default",
            "statsGroups": [
              "Quorum",
              "Port"
            ]
          }
        ],
        "title": "Incoming REJECTED traffic from internet to our node at port 30303",
        "type": "table"
      }
    ],
    "refresh": "",
    "schemaVersion": 35,
    "style": "dark",
    "tags": [
      "quorum",
      "traffic",
      "ingress",
      "egress",
      "peers"
    ],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-6h",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Quorum Node Flow Logs",
    "uid": "qRdxGl37z",
    "version": 17,
    "weekStart": ""
  }