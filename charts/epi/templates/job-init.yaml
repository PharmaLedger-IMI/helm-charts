{{- /*
Please note: The Init Job only will only be deployed by helm a) on fresh install or b) if the image differs from last build
*/}}
{{- if or .Values.builder.forceRun (or .Release.IsInstall (ne (include "epi.lastBuiltImage" .) (include "epi.image" .))) -}}

{{- /*
1. Create Configmaps required for hook from template
*/}}

{{- include "epi.configmap-bdns" (list $ . "-init" (dict "helm.sh/hook" "pre-install,pre-upgrade" "helm.sh/hook-delete-policy" "before-hook-creation,hook-succeeded,hook-failed" "helm.sh/hook-weight" "-1")) }}
---
{{- include "epi.configmap-config" (list $ . "-init" (dict "helm.sh/hook" "pre-install,pre-upgrade" "helm.sh/hook-delete-policy" "before-hook-creation,hook-succeeded,hook-failed" "helm.sh/hook-weight" "-1")) }}
---
{{- include "epi.configmap-domains" (list $ . "-init" (dict "helm.sh/hook" "pre-install,pre-upgrade" "helm.sh/hook-delete-policy" "before-hook-creation,hook-succeeded,hook-failed" "helm.sh/hook-weight" "-1")) }}
---
{{- include "epi.configmap-environment" (list $ . "-init" (dict "helm.sh/hook" "pre-install,pre-upgrade" "helm.sh/hook-delete-policy" "before-hook-creation,hook-succeeded,hook-failed" "helm.sh/hook-weight" "-1")) }}
---

{{- /*
2. This Job starts the apihub, then starts the build process. 

Details:
The pod consists of an initContainer and a "main" container which share a temporary volume between both containers.
A dedicated ServiceAccount with write permissions to the ConfigMap containing the seedsBackup is used by the pod.
1. The apiHub/epi application runs in the initContainer as background process. 
   After a short delay (10s) the build process starts and writes the seedsBackup to the mounted temporary volume share with the "main" container.
   Then the process exists and the init container stops.
2. The "main" container starts and writes the content of the seedBackup file into a ConfigMap.
   It has the permission doing so via the ServiceAccount

*/}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "epi.fullname" . }}-init
  annotations:
    "description": "Init Job for running the builder image"
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "0"
spec:
  backoffLimit: 1
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
      serviceAccountName: {{ include "epi.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
      - name: builder
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: {{ include "epi.imageBuilder" . | quote }}
        imagePullPolicy: {{ .Values.builder.image.pullPolicy | default "IfNotPresent" }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        command:
          - sh
          - -c
        args:
          - |
            # Exit on error
            set -e
            # Start server in background, wait, run build and copy seedBackup to shared folder with main container.
            cd /ePI-workspace
            echo "=======> Not build yet!"
            echo "=======> Starting application in background process ..."
            npm run server &
            server_pid=$!
            echo "=======> Application running in background with PID=$server_pid"
            echo "=======> Sleeping for {{ .Values.builder.sleepTime }} ..."
            sleep {{ .Values.builder.sleepTime }}
            echo "=======> Starting build process ..."
            node ./node_modules/octopus/scripts/setEnv --file=../../../env.json "node ./bin/octopusRun.js epi-ssapps-and-wallets-build"
            rc=$?
            echo "=======> Build process done - rc=$rc"
            if [ $rc -ne 0 ]
            then
              echo "=======> ERROR during build process - Exiting with rc=$rc ..."
            fi
            echo "=======> Exiting ..."
            exit $rc
        volumeMounts:
          - name: epi-external-volume
            mountPath: /ePI-workspace/apihub-root/external-volume
          - name: epi-config-volume
            mountPath: /ePI-workspace/apihub-root/external-volume/config/apihub.json
            subPath: apihub.json
            readOnly: true
          - name: epi-bdns-config-volume
            mountPath: /ePI-workspace/apihub-root/external-volume/config/bdns.hosts
            subPath: bdns.hosts
            readOnly: true
          - name: epi-config-volume
            mountPath: /ePI-workspace/env.json
            subPath: env.json
            readOnly: true
          - name: epi-domains-volume
            mountPath: /ePI-workspace/apihub-root/external-volume/config/domains/{{ required "config.domain must be set" .Values.config.domain }}.json
            subPath: {{ required "config.domain must be set" .Values.config.domain }}.json
            readOnly: true
          - name: epi-domains-volume
            mountPath: /ePI-workspace/apihub-root/external-volume/config/domains/{{ required "config.subDomain must be set" .Values.config.subDomain }}.json
            subPath: {{ required "config.subDomain must be set" .Values.config.subDomain }}.json
            readOnly: true
          - name: epi-domains-volume
            mountPath: /ePI-workspace/apihub-root/external-volume/config/domains/{{ required "config.vaultDomain must be set" .Values.config.vaultDomain }}.json
            subPath: {{ required "config.vaultDomain must be set" .Values.config.vaultDomain }}.json
            readOnly: true
            #
            # Mounts for environment configs to trust-loader
            #
          - name: epi-env-volume
            mountPath: /ePI-workspace/trust-loader-config/demiurge-wallet/loader/environment.js
            subPath: demiurge-environment.js
            readOnly: true
          - name: epi-env-volume
            mountPath: /ePI-workspace/trust-loader-config/dsu-explorer/loader/environment.js
            subPath: dsu-explorer-environment.js
            readOnly: true
          - name: epi-env-volume
            mountPath: /ePI-workspace/trust-loader-config/dsu-fabric-wallet/loader/environment.js
            subPath: dsu-fabric-environment.js
            readOnly: true
          - name: epi-env-volume
            mountPath: /ePI-workspace/trust-loader-config/leaflet-wallet/loader/environment.js
            subPath: leaflet-environment.js
            readOnly: true
            #
            # Mounts for environment configs to wallets itself
            #
          - name: epi-env-volume
            mountPath: /ePI-workspace/apihub-root/demiurge-wallet/loader/environment.js
            subPath: demiurge-environment.js
            readOnly: true
          - name: epi-env-volume
            mountPath: /ePI-workspace/apihub-root/dsu-explorer/loader/environment.js
            subPath: dsu-explorer-environment.js
            readOnly: true
          - name: epi-env-volume
            mountPath: /ePI-workspace/apihub-root/dsu-fabric-wallet/loader/environment.js
            subPath: dsu-fabric-environment.js
            readOnly: true
          - name: epi-env-volume
            mountPath: /ePI-workspace/apihub-root/leaflet-wallet/loader/environment.js
            subPath: leaflet-environment.js
            readOnly: true

          # # 
          # # TODO: Remove with v1.3.1 - https://github.com/PharmaLedger-IMI/epi-workspace/tree/master/apihub-root/external-volume/wallets
          # #
          # - name: epi-env-volume
          #   mountPath: /ePI-workspace/apihub-root/external-volume/wallets/leaflet-wallet/wallet-patch/environment.json
          #   subPath: leaflet-wallet_wallet-patch_environment.json
          #   readOnly: true
          # - name: epi-env-volume
          #   mountPath: /ePI-workspace/apihub-root/external-volume/wallets/leaflet-wallet/wallet-patch/security.policies
          #   subPath: leaflet-wallet_wallet-patch_security.policies
          #   readOnly: true
          # - name: epi-env-volume
          #   mountPath: /ePI-workspace/apihub-root/external-volume/wallets/demiurge-wallet/wallet-patch/messages/createEnclave.json
          #   subPath: demiurge-wallet_wallet-patch_messages_createEnclave.json
          #   readOnly: true
          # - name: epi-env-volume
          #   mountPath: /ePI-workspace/apihub-root/external-volume/wallets/demiurge-wallet/wallet-patch/messages/createGroup.json
          #   subPath: demiurge-wallet_wallet-patch_messages_createGroup.json
          #   readOnly: true

      volumes:
        - name: epi-config-volume
          configMap:
            name: {{ include "epi.fullname" . }}-config-init
        - name: epi-bdns-config-volume
          configMap:
            name: {{ include "epi.fullname" . }}-bdns-init
        - name: epi-domains-volume
          configMap:
            name: {{ include "epi.fullname" . }}-domains-init
        - name: epi-env-volume
          configMap:
            name: {{ include "epi.fullname" . }}-environment-init
        - name: epi-external-volume
          persistentVolumeClaim:
            claimName: {{ include "epi.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end -}}