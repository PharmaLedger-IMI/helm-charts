{{- /*
1. Role, RoleBinding and ServiceAccount for Cleanup Job
*/}}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "epi.fullname" . }}-cleanup
  annotations:
    "description": "Role for Cleanup Job"
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "-1"
rules:
# Delete (Pre-)Builder Job
- apiGroups:
  - "batch"
  resourceNames:
  - "{{ include "epi.fullname" . }}-builder"
  - "{{ include "epi.fullname" . }}-pre-builder"
  resources:
  - jobs
  verbs:
  - delete
{{- if eq (toString .Values.persistence.deleteOnUninstall) "true" }}
# Delete PVC
- apiGroups:
  - ""
  resourceNames:
  - {{ include "epi.fullname" . | quote }}
  resources:
  - persistentvolumeclaims
  verbs:
  - delete
{{- end }}
{{- if .Values.serviceAccount.create -}}
# Delete ServiceAccount
- apiGroups:
  - ""
  resourceNames:
  - {{ include "epi.serviceAccountName" . | quote }}
  resources:
  - serviceaccounts
  verbs:
  - delete
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "epi.fullname" . }}-cleanup
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ include "epi.fullname" . }}-cleanup
subjects:
- kind: ServiceAccount
  name: {{ include "epi.fullname" . }}-cleanup
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "epi.fullname" . }}-cleanup
  labels:
    {{- include "epi.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "-1"
---

{{- /*
2. This Job cleans up resources created on init/upgrade hook
*/}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "epi.fullname" . }}-cleanup
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "0"
    "checkov.io/skip1": CKV_K8S_38=ServiceAccountToken needs to be mounted in order for kubectl to communicate to K8S API
spec:
  backoffLimit: 1
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "epi.fullname" . }}-cleanup
      automountServiceAccountToken: true
      {{- with .Values.kubectl.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
      containers:
      - name: main
        {{- with .Values.kubectl.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.kubectl.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        image: {{ include "epi.kubectl.image" . | quote }}
        imagePullPolicy: {{ .Values.kubectl.image.pullPolicy | default "Always" }}
        command:
          - sh
          - -c
        args:
          - |
            set -e
            echo "Cleanup Job started"

            echo "1. Deleting Pre-Builder Job ..."
            kubectl delete job {{ include "epi.fullname" . }}-pre-builder --ignore-not-found=true
            echo "2. Deleting Builder Job ..."
            kubectl delete job {{ include "epi.fullname" . }}-builder --ignore-not-found=true

            {{- if not .Values.persistence.existingClaim }}
            {{- if eq (toString .Values.persistence.deleteOnUninstall) "true" }}
            echo "3. Deleting PersistentVolumeClaim {{ include "epi.fullname" . }} ..."
            kubectl delete pvc {{ include "epi.fullname" . }} --ignore-not-found=true
            {{- else }}
            echo "3. SKIPPED: Deleting PersistentVolumeClaim {{ include "epi.fullname" . }}."
            {{- end }}
            {{- end }}

            {{- if .Values.serviceAccount.create -}}
            echo "4. Deleting ServiceAccount {{ include "epi.serviceAccountName" . }} ..."
            kubectl delete serviceaccount {{ include "epi.serviceAccountName" . }} --ignore-not-found=true
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
