# Default values for ethadapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of replicas if autoscaling is false
replicaCount: 1

image:
  # -- The repository of the container image
  repository: "pharmaledger/ethadapter"
  # -- Image Pull Policy
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.2"
  # -- sha256 digest of the image.
  # Do not add the prefix "@sha256:"
  # Default to image digest for version 1.0.2
  sha: "e387f4b292fff25f6d7fa1792ec586bf46cab31265a84136561c469accd81b06"

# -- Secret(s) for pulling an container image from a private registry.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []
# -- nameOverride replaces the name of the chart in the Chart.yaml file, when this is used to construct Kubernetes object names.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
nameOverride: ""
# -- fullnameOverride completely replaces the generated name.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
fullnameOverride: ""
# -- Override the deployment namespace.
# Very useful for multi-namespace deployments in combined charts
namespaceOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created.
  # Must be true if secretProviderClass.enabled is true
  create: false
  # -- Annotations to add to the service account
  annotations: {}
    ## Sample for AWS if secretProviderClass.enabled is true
    # eks.amazonaws.com/role-arn: "TODO: The ARN of the IAM role"

  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

  # -- Whether automounting API credentials for a service account is enabled or not.
  # See [https://docs.bridgecrew.io/docs/bc_k8s_35](https://docs.bridgecrew.io/docs/bc_k8s_35)
  automountServiceAccountToken: false

# -- Annotations added to the pod
podAnnotations: {}

# -- Security Context for the pod.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
# and [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)
podSecurityContext:
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534
  seccompProfile:
    type: RuntimeDefault

# -- Security Context for the container.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

service:
  # -- Either ClusterIP, NodePort or LoadBalancer.
  # See [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
  type: ClusterIP
  # -- Port where the service will be exposed
  port: 3000
  # -- Annotations for the service.
  # See AWS, see [https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws](https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws)
  # For Azure, see [https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations](https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations)
  annotations: {}

# -- The location of the smart contract info uploaded when the smart contract was deployed
smart_contract_shared_configuration:
  # -- github access token
  read_write_token: ""
  # -- username/shared-repository
  repository_name: ""
  # -- name of the network, eg. ePI, csc, iot, etc.
  network_name: ""
  # -- smart contract file name
  smartContractInfoName: "anchoring.json"

config:
  # -- URL of the Quorum node
  rpcAddress: "http://quorum-validator1.quorum:8545"
  # -- Smart Contract Info.
  # A JSON object with these two keys: "address" and "abi"
  # If not set/empty, tries to get value from ConfigMap '.config.smartContractInfoConfigMapName' with key '.config.smartContractInfoConfigMapKey'
  smartContractInfo: |-
    {
      "address": "",
      "abi": ""
    }
  # -- The name of the existing ConfigMap to look for in case value 'smartContractInfo' is not defined.
  smartContractInfoConfigMapName: "smartcontractinfo"
  # -- The key of the SmartContractInfo in the existing ConfigMap in case 'smartContractInfo' is not explictly defined.
  smartContractInfoConfigMapKey: "info"

secrets:
  # -- Org Account in JSON format.
  # This value must be set or orgAccountJsonBase64.
  orgAccountJson: ""
  # -- Org Account in JSON format base64 encoded.
  # This value must be set or orgAccountJson
  orgAccountJsonBase64: ""

secretProviderClass:
  # -- Whether to use CSI Secrets Store (e.g. Azure Key Vault) instead of "traditional" Kubernetes Secret.
  enabled: false
  # -- API Version of the SecretProviderClass
  apiVersion: "secrets-store.csi.x-k8s.io/v1"
  # -- Spec for the SecretProviderClass.
  # Note: The orgAccountJson must be mounted as objectAlias orgAccountJson
  spec: {}
    ## Sample for AWS:
    # provider: aws
    # parameters:
    #   objects: |
    #     - objectName: "TODO: ARN or Name of Secret"
    #       objectType: "secretsmanager"
    #       objectAlias: "orgAccountJson"

ingress:
  # -- Whether to create ingress or not.
  # Note: For ingress an Ingress Controller (e.g. AWS LB Controller, NGINX Ingress Controller, Traefik, ...) is required and service.type should be ClusterIP or NodePort depending on your configuration
  enabled: false
  # -- The className specifies the IngressClass object which is responsible for that class.
  # Note for Kubernetes >= 1.18 it is required to have an existing IngressClass object.
  # If IngressClass object does not exists, omit className and add the deprecated annotation 'kubernetes.io/ingress.class' instead.
  # For Kubernetes < 1.18 either use className or annotation 'kubernetes.io/ingress.class'.
  # See https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class
  className: ""
  # -- Ingress annotations.
  # For AWS LB Controller, see [https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/annotations/](https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/annotations/)
  # For Azure Application Gateway Ingress Controller, see [https://azure.github.io/application-gateway-kubernetes-ingress/annotations/](https://azure.github.io/application-gateway-kubernetes-ingress/annotations/)
  # For NGINX Ingress Controller, see [https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/](https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/)
  # For Traefik Ingress Controller, see [https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#annotations](https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#annotations)
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- A list of hostnames and path(s) to listen at the Ingress Controller
  hosts:
    -
      # -- The FQDN/hostname
      host: ethadapter.some-pharma-company.com
      paths:
        -
          # -- The Ingress Path. See [https://kubernetes.io/docs/concepts/services-networking/ingress/#examples](https://kubernetes.io/docs/concepts/services-networking/ingress/#examples)
          # Note: For Ingress Controllers like AWS LB Controller see their specific documentation.
          path: /
          # -- The type of path. This value is required since Kubernetes 1.18.
          # For Ingress Controllers like AWS LB Controller or Traefik it is usually required to set its value to ImplementationSpecific
          # See [https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types](https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types)
          # and [https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/](https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/)
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource constraints for a pod
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 5m
    memory: 64Mi

autoscaling:
  # -- Whether to enable horizontal pod autoscaling or not.
  # See [https://kubernetes.io/de/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/de/docs/tasks/run-application/horizontal-pod-autoscale/)
  enabled: false
  # -- The minimum number of replicas in case autoscaling is enabled.
  minReplicas: 1
  # -- The maximum number of replicas in case autoscaling is enabled.
  maxReplicas: 100
  # -- The CPU utilization in percentage as a target for autoscaling.
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node Selectors in order to assign pods to certain nodes.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}

# -- Tolerations for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- Affinity for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
affinity: {}

# -- Liveness probe.
# Defaults to check if the server is listening.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

# -- Readiness probe.
# Defaults to check if server can query data.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
readinessProbe:
  httpGet:
    path: /totalNumberOfAnchors/
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
