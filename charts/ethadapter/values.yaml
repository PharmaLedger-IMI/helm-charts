# Default values for ethadapter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of replicas if autoscaling is false
replicaCount: 1

image:
  # -- The repository of the container image
  repository: "pharmaledger/apiadapter"
  # -- Image Pull Policy
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # -- sha256 digest of the image.
  # Do not add the prefix "@sha256:"
  sha: ""

# -- Secret(s) for pulling an container image from a private registry.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []
# -- nameOverride replaces the name of the chart in the Chart.yaml file, when this is used to construct Kubernetes object names.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
nameOverride: ""
# -- fullnameOverride completely replaces the generated name.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
fullnameOverride: ""
# -- Override the deployment namespace.
# Very useful for multi-namespace deployments in combined charts
namespaceOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created.
  # Must be true if secretProviderClass.enabled is true
  create: false
  # -- Annotations to add to the service account
  annotations: {}
    ## Sample for AWS if secretProviderClass.enabled is true
    # eks.amazonaws.com/role-arn: "TODO: The ARN of the IAM role"

  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

  # -- Whether automounting API credentials for a service account is enabled or not.
  # See [https://docs.bridgecrew.io/docs/bc_k8s_35](https://docs.bridgecrew.io/docs/bc_k8s_35)
  automountServiceAccountToken: false

# -- Annotations added to the pod
podAnnotations: {}

# -- Security Context for the pod.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
# and [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)
podSecurityContext:
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534
  # seccompProfile:
  #   type: RuntimeDefault

# -- Security Context for the container.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534

service:
  # -- Either ClusterIP, NodePort or LoadBalancer.
  # See [https://kubernetes.io/docs/concepts/services-networking/service/](https://kubernetes.io/docs/concepts/services-networking/service/)
  type: ClusterIP
  # -- Port where the service will be exposed
  port: 3000
  # -- Annotations for the service.
  # See AWS, see [https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws](https://kubernetes.io/docs/concepts/services-networking/service/#ssl-support-on-aws)
  # For Azure, see [https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations](https://kubernetes-sigs.github.io/cloud-provider-azure/topics/loadbalancer/#loadbalancer-annotations)
  annotations: {}

config:
  # -- URL of the Quorum node
  rpcAddress: "http://quorum-validator1.quorum:8545"
  # -- Address of the Smart Contract.
  # If not set/empty, tries to get value from ConfigMap '.config.smartContractConfigMapName' with key '.config.smartContractConfigMapAddressKey'
  # -- The name of the existing ConfigMap to look for in case value 'smartContractAddress' is not defined.
  #  smartContractAbi: \"[{\\\"inputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"constructor\\\",\\\"signature\\\":\\\"constructor\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bool\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"bool\\\"}],\\\"name\\\":\\\"BoolResult\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0xe4c4cee71ba316791852973131a1c91b3186c97e6f2170b7b468b61336df77da\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes1\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"bytes1\\\"}],\\\"name\\\":\\\"Bytes1Result\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0x7690901f129c64beb5bf89170adf3a1578535d6fac975c4e82f6c506c2de5f33\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"bytes32\\\"}],\\\"name\\\":\\\"Bytes32Result\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0xc3d3f2d9349f478d1698b45307097f9858fdb5b1fb34af98972b683d9594d2fb\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":true,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"statusCode\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"InvokeStatus\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0x4946ccdaf82fd5a93c40e96bfc3e4486f2b1d95879aecd4b186cd3e2adb3f4b9\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"bytes\\\"}],\\\"name\\\":\\\"Result\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0x5ab64fb87e623978177884a091a88f5cf71a28fe2bf49ed1dc74330de1b26338\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string[2]\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"string[2]\\\"}],\\\"name\\\":\\\"StringArray2Result\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0x1ba235f9f71bc870124fa5ce28b612f7ecaa0d160278a54ed0f43df9ccfbc4d5\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string[]\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"string[]\\\"}],\\\"name\\\":\\\"StringArrayResult\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0xc7b6852636ea044eced4a419aa7163cabe002274878915ddc7b892b90fea4a2a\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"StringResult\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0xc845144e0a4d83baeb83b62ebe786e97540c7d12fbd3e03b73c850dce66c0390\\\"},{\\\"anonymous\\\":false,\\\"inputs\\\":[{\\\"indexed\\\":false,\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"str\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"UIntResult\\\",\\\"type\\\":\\\"event\\\",\\\"signature\\\":\\\"0x00b7ea7bd2778dec23d54cc08a591e031a483c46601f794f28933e3a99fed63d\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"anchorId\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"newAnchorValue\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"uint8\\\",\\\"name\\\":\\\"v\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"appendAnchor\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\",\\\"signature\\\":\\\"0xc1c735b4\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"anchorId\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"newAnchorValue\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"uint8\\\",\\\"name\\\":\\\"v\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"createAnchor\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\",\\\"signature\\\":\\\"0xa9fd4a2a\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string[]\\\",\\\"name\\\":\\\"anchors\\\",\\\"type\\\":\\\"string[]\\\"}],\\\"name\\\":\\\"createOrUpdateMultipleAnchors\\\",\\\"outputs\\\":[],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\",\\\"signature\\\":\\\"0x7e2ee190\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"from\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"limit\\\",\\\"type\\\":\\\"uint256\\\"},{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"maxSize\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"name\\\":\\\"dumpAnchors\\\",\\\"outputs\\\":[{\\\"components\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"anchorId\\\",\\\"type\\\":\\\"string\\\"},{\\\"internalType\\\":\\\"string[]\\\",\\\"name\\\":\\\"anchorValues\\\",\\\"type\\\":\\\"string[]\\\"}],\\\"internalType\\\":\\\"struct Anchoring.Anchor[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"tuple[]\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\",\\\"signature\\\":\\\"0x1f7ab91c\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"anchorId\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"getAllVersions\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string[]\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string[]\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\",\\\"constant\\\":true,\\\"signature\\\":\\\"0xd4dca96d\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"anchorId\\\",\\\"type\\\":\\\"string\\\"}],\\\"name\\\":\\\"getLastVersion\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"string\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"string\\\"}],\\\"stateMutability\\\":\\\"view\\\",\\\"type\\\":\\\"function\\\",\\\"constant\\\":true,\\\"signature\\\":\\\"0x5436d6b2\\\"},{\\\"inputs\\\":[{\\\"internalType\\\":\\\"bytes32\\\",\\\"name\\\":\\\"hash\\\",\\\"type\\\":\\\"bytes32\\\"},{\\\"internalType\\\":\\\"bytes\\\",\\\"name\\\":\\\"signature\\\",\\\"type\\\":\\\"bytes\\\"},{\\\"internalType\\\":\\\"uint8\\\",\\\"name\\\":\\\"v\\\",\\\"type\\\":\\\"uint8\\\"}],\\\"name\\\":\\\"recover\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"address\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"address\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\",\\\"signature\\\":\\\"0xd4a4871f\\\"},{\\\"inputs\\\":[],\\\"name\\\":\\\"totalNumberOfAnchors\\\",\\\"outputs\\\":[{\\\"internalType\\\":\\\"uint256\\\",\\\"name\\\":\\\"\\\",\\\"type\\\":\\\"uint256\\\"}],\\\"stateMutability\\\":\\\"nonpayable\\\",\\\"type\\\":\\\"function\\\",\\\"signature\\\":\\\"0x926a5c63\\\"}]\"
  smartContractInfo: >-
    "{
        "address": "0xfA75072Dc5e4135023a2E2DB1533d2368608FD09",
        "abi": '[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bool","name":"str","type":"bool"}],"name":"BoolResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes1","name":"str","type":"bytes1"}],"name":"Bytes1Result","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"str","type":"bytes32"}],"name":"Bytes32Result","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"statusCode","type":"uint256"}],"name":"InvokeStatus","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"str","type":"bytes"}],"name":"Result","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string[2]","name":"str","type":"string[2]"}],"name":"StringArray2Result","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string[]","name":"str","type":"string[]"}],"name":"StringArrayResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"str","type":"string"}],"name":"StringResult","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"str","type":"uint256"}],"name":"UIntResult","type":"event"},{"inputs":[{"internalType":"string","name":"anchorId","type":"string"},{"internalType":"string","name":"newAnchorValue","type":"string"},{"internalType":"uint8","name":"v","type":"uint8"}],"name":"createAnchor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"anchorId","type":"string"},{"internalType":"string","name":"newAnchorValue","type":"string"},{"internalType":"uint8","name":"v","type":"uint8"}],"name":"appendAnchor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"anchorId","type":"string"}],"name":"getAllVersions","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"string","name":"anchorId","type":"string"}],"name":"getLastVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function","constant":true},{"inputs":[{"internalType":"string[]","name":"anchors","type":"string[]"}],"name":"createOrUpdateMultipleAnchors","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"from","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint256","name":"maxSize","type":"uint256"}],"name":"dumpAnchors","outputs":[{"components":[{"internalType":"string","name":"anchorId","type":"string"},{"internalType":"string[]","name":"anchorValues","type":"string[]"}],"internalType":"struct Anchoring.Anchor[]","name":"","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalNumberOfAnchors","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint8","name":"v","type":"uint8"}],"name":"recover","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}]',
    }"

secrets:
  orgAccountJson: >-
    "{
      "address": "0xA807Ba88BDBF584bE98f4be751A7D128Fb1F8c1D",
      "privateKey": "0x7e41a6ef7e574a9f3b61cc252095e25292832d1fee497f4156a5f862b90f29d1"
    }

secretProviderClass:
  # -- Whether to use CSI Secrets Store (e.g. Azure Key Vault) instead of "traditional" Kubernetes Secret.
  enabled: false
  # -- API Version of the SecretProviderClass
  apiVersion: "secrets-store.csi.x-k8s.io/v1"
  # -- Spec for the SecretProviderClass.
  # Note: The orgAccountJson must be mounted as objectAlias orgAccountJson
  spec: {}
    ## Sample for AWS:
    # provider: aws
    # parameters:
    #   objects: |
    #     - objectName: "TODO: ARN or Name of Secret"
    #       objectType: "secretsmanager"
    #       objectAlias: "orgAccountJson"

ingress:
  # -- Whether to create ingress or not.
  # Note: For ingress an Ingress Controller (e.g. AWS LB Controller, NGINX Ingress Controller, Traefik, ...) is required and service.type should be ClusterIP or NodePort depending on your configuration
  enabled: false
  # -- The className specifies the IngressClass object which is responsible for that class.
  # Note for Kubernetes >= 1.18 it is required to have an existing IngressClass object.
  # If IngressClass object does not exists, omit className and add the deprecated annotation 'kubernetes.io/ingress.class' instead.
  # For Kubernetes < 1.18 either use className or annotation 'kubernetes.io/ingress.class'.
  # See https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-class
  className: ""
  # -- Ingress annotations.
  # For AWS LB Controller, see [https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/annotations/](https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.3/guide/ingress/annotations/)
  # For Azure Application Gateway Ingress Controller, see [https://azure.github.io/application-gateway-kubernetes-ingress/annotations/](https://azure.github.io/application-gateway-kubernetes-ingress/annotations/)
  # For NGINX Ingress Controller, see [https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/](https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/)
  # For Traefik Ingress Controller, see [https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#annotations](https://doc.traefik.io/traefik/routing/providers/kubernetes-ingress/#annotations)
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- A list of hostnames and path(s) to listen at the Ingress Controller
  hosts:
    -
      # -- The FQDN/hostname
      host: ethadapter.some-pharma-company.com
      paths:
        -
          # -- The Ingress Path. See [https://kubernetes.io/docs/concepts/services-networking/ingress/#examples](https://kubernetes.io/docs/concepts/services-networking/ingress/#examples)
          # Note: For Ingress Controllers like AWS LB Controller see their specific documentation.
          path: /
          # -- The type of path. This value is required since Kubernetes 1.18.
          # For Ingress Controllers like AWS LB Controller or Traefik it is usually required to set its value to ImplementationSpecific
          # See [https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types](https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types)
          # and [https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/](https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/)
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource constraints for a pod
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 5m
    memory: 64Mi

autoscaling:
  # -- Whether to enable horizontal pod autoscaling or not.
  # See [https://kubernetes.io/de/docs/tasks/run-application/horizontal-pod-autoscale/](https://kubernetes.io/de/docs/tasks/run-application/horizontal-pod-autoscale/)
  enabled: false
  # -- The minimum number of replicas in case autoscaling is enabled.
  minReplicas: 1
  # -- The maximum number of replicas in case autoscaling is enabled.
  maxReplicas: 100
  # -- The CPU utilization in percentage as a target for autoscaling.
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node Selectors in order to assign pods to certain nodes.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}

# -- Tolerations for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- Affinity for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
affinity: {}

# -- Liveness probe.
# Defaults to check if the server is listening.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

# -- Readiness probe.
# Defaults to check if server can query data.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
readinessProbe:
  httpGet:
    path: /totalNumberOfAnchors/
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
