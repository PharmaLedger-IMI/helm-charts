apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "smartcontract.fullname" . }}
  namespace: {{ template "smartcontract.namespace" . }}
  annotations:
    "checkov.io/skip1": CKV_K8S_38=ServiceAccountToken needs to be mounted in order for kubectl to communicate to K8S API
  labels:
    {{- include "smartcontract.labels" . | nindent 4 }}
spec:
  backoffLimit: 0
  template:
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # Use the ServiceAccount which has permissions to write to configMap
      serviceAccountName: {{ include "smartcontract.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: Never
      initContainers:
      - name: init
        {{- if .Values.image.sha }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}@sha256:{{ .Values.image.sha }}"
        {{- else }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        command:
          - /bin/sh
          - -c
        args:
          - |
            set -e
            echo "truffle migrate ..."
            truffle migrate
            echo "truffle migrate done"

            echo ""
            echo "Copying SmartContract address to /container-shared-data ..."
            cp ./external/smartcontractaddress.txt /container-shared-data/AnchoringAddress

            echo "Extracting Abi to /container-shared-data ..."
            node ./getAbi.js

            echo "Creating info and storing at /container-shared-data/info.json ..."
            node ./getInfo.js

            echo ""
            echo "Show content of folder /container-shared-data"
            ls -las /container-shared-data

            echo ""
            echo "Exiting init container"
            exit 0
        env:
          - name: PORT
            value: {{ .Values.config.quorumNodePort | quote }}
          - name: RPC_HOST
            value: {{ .Values.config.quorumNodeAddress | quote }}
          - name: ACCOUNT
            value: {{ .Values.config.account | quote }}
        volumeMounts:
            # we need to mount helper code file(s)
          - name: code
            mountPath: /usr/node/app/getAbi.js
            subPath: getAbi.js
          - name: code
            mountPath: /usr/node/app/getInfo.js
            subPath: getInfo.js
            # We mount a temporary volume in order to hand over data from init to main container
          - name: container-shared-data
            mountPath: /container-shared-data
      containers:
      - name: write-configmap
        {{- if .Values.kubectlImage.sha }}
        image: "{{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}@sha256:{{ .Values.kubectlImage.sha }}"
        {{- else }}
        image: "{{ .Values.kubectlImage.repository }}:{{ .Values.kubectlImage.tag }}"
        {{- end }}
        imagePullPolicy: {{ .Values.kubectlImage.pullPolicy }}
        command:
          - /bin/sh
          - -c
        args:
          - |
            echo "=======> Writing or updating ConfigMap {{ include "smartcontract.configMapNameAnchoringInfo" . }} ..."
            kubectl create configmap {{ include "smartcontract.configMapNameAnchoringInfo" . }} \
              --from-file=abi=/container-shared-data/AnchoringAbi.json \
              --from-file=address=/container-shared-data/AnchoringAddress \
              --from-file=info=/container-shared-data/info.json \
              --dry-run=client -o yaml | kubectl apply -f -
        volumeMounts:
          - name: container-shared-data
            mountPath: /container-shared-data
      volumes:
        - name: code
          configMap:
            name: {{ include "smartcontract.fullname" . }}-code
        - name: container-shared-data
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
