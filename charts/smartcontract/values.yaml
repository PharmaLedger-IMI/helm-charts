# Default values for smartcontract.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


image:
  # -- The repository of the container image which deploys the Smart Contract
  repository: "pharmaledger/anchor_smart"
  # -- Image Pull Policy of the node container
  pullPolicy: Always
  # -- The tag of the container image which deploys the Smart Contract
  tag: "latest"
  # -- sha256 digest of the image.
  # Do not add the prefix "@sha256:"
  # Default to image digest for version latest - see [dockerhub](https://hub.docker.com/layers/pharmaledger/anchor_smart/latest/images/sha256-6c146032888e99090200763e9479fd832aba36c5cc57859df521131fe913d731?context=explore)
  # <!-- # pragma: allowlist secret -->
  sha: "6c146032888e99090200763e9479fd832aba36c5cc57859df521131fe913d731"  # pragma: allowlist secret

kubectlImage:
  # -- The repository of the container image which creates configmap and secret
  repository: bitnami/kubectl
  # -- Image Pull Policy
  pullPolicy: Always
  # -- The Tag of the image containing kubectl. Minor Version should match to your Kubernetes Cluster Version.
  tag: "1.21.14"
  # -- sha256 digest of the image.
  # Do not add the prefix "@sha256:"
  # <br/>
  # Defaults to image digest for "bitnami/kubectl:1.21.14", see [https://hub.docker.com/layers/kubectl/bitnami/kubectl/1.21.14/images/sha256-f9814e1d2f1be7f7f09addd1d877090fe457d5b66ca2dcf9a311cf1e67168590?context=explore](https://hub.docker.com/layers/kubectl/bitnami/kubectl/1.21.14/images/sha256-f9814e1d2f1be7f7f09addd1d877090fe457d5b66ca2dcf9a311cf1e67168590?context=explore)
  # <!-- # pragma: allowlist secret -->
  sha: "bba32da4e7d08ce099e40c573a2a5e4bdd8b34377a1453a69bbb6977a04e8825"  # pragma: allowlist secret

# -- Secret(s) for pulling an container image from a private registry.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/](https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/)
imagePullSecrets: []
# -- nameOverride replaces the name of the chart in the Chart.yaml file, when this is used to construct Kubernetes object names.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
nameOverride: ""
# -- fullnameOverride completely replaces the generated name.
# From [https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm](https://stackoverflow.com/questions/63838705/what-is-the-difference-between-fullnameoverride-and-nameoverride-in-helm)
fullnameOverride: ""
# -- Override the deployment namespace.
# Very useful for multi-namespace deployments in combined charts
namespaceOverride: ""

config:
  # -- Name of the ConfigMap with the anchoring info. If empty uses a generic name
  configMapAnchoringInfoName: "smartcontractinfo"

  # -- DNS Name or IP Address of Quorum node.
  # Defaults to first Quorum node provided by helm chart 'standalone-quorum' on a Sandbox environment.
  quorumNodeAddress: "quorum-validator1.quorum"
  # -- Port of Quorum Node endpoint
  quorumNodePort: "8545"
  # -- Existing account on Blockchain network
  # Defaults to the predefined account from node 'quorum-validator1' deployed by helm chart 'standalone-quorum'
  account: "0xb5ced4530d6ccbb31b2b542fd9b4558b52296784"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Resource constraints for each container
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 50m
    memory: 1Gi

# -- Node Selectors in order to assign pods to certain nodes.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
nodeSelector: {}

# -- Tolerations for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
tolerations: []

# -- Affinity for scheduling a pod.
# See [https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
affinity: {}

# -- Security Context for the pod.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod)
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0
  # -- The SecComp configuration.
  # Not enabled by default as not every environment supports it.
  # [https://kubernetes.io/docs/tutorials/security/seccomp/](https://kubernetes.io/docs/tutorials/security/seccomp/)
  # seccompProfile:
  #   type: RuntimeDefault

# -- Security Context for the container.
# See [https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container)
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  runAsNonRoot: false
  runAsUser: 0
  runAsGroup: 0
